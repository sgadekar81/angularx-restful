{"version":3,"sources":["../../srv/rest.service.ts"],"names":[],"mappings":"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","file":"rest.service.js","sourceRoot":"","sourcesContent":["//created by just be project builder 1.0.0\r\nimport { Injectable } from '@angular/core';\r\nimport { Http, Response } from '@angular/http';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport 'rxjs/add/operator/catch';\r\nimport 'rxjs/add/operator/map';\r\nimport 'rxjs/add/observable/throw';\r\nimport { RestParams } from '../classes/rest-params';\r\nimport { RestEvents } from '../classes/rest-events';\r\nimport { LftSrv }     from 'angularx-headers/lft.service';\r\n\r\n\r\nexport class RestService {\t\r\n\tconstructor (private http: Http,private _lftSrv:LftSrv) {}\r\n\tparams:RestParams;\r\n\tget(params:RestParams){\r\n\t\tthis.resolveRestInit(params);\r\n\t\treturn this.http.get(params.uri)\r\n\t\t\t\t.map(this.extractData.bind(this))\r\n\t\t\t\t.catch(this.handleError.bind(this));\r\n\t};\r\n\tpost(params:RestParams){\r\n\t\tthis.resolveRestInit(params);\r\n\t  return this.http.post(params.uri,params.payload,{headers:this.getDftHdr(params.headers)})\r\n\t    .map(this.extractData.bind(this))\r\n\t    .catch(this.handleError.bind(this));\r\n\t};\r\n\tput(params:RestParams){\r\n\t\tthis.resolveRestInit(params);\r\n\t  return this.http.put(params.uri,params.payload,{headers:this.getDftHdr(params.headers)})\r\n\t    .map(this.extractData.bind(this))\r\n\t    .catch(this.handleError.bind(this));\r\n\t};\r\n\tdelete(params:RestParams){\r\n\t\tthis.resolveRestInit(params);\r\n\t  return this.http.delete(params.uri)\r\n\t    .map(this.extractData.bind(this))\r\n\t    .catch(this.handleError.bind(this));\r\n\t}\r\n\t//sub methodes\r\n\tprivate extractData(res: Response) {\r\n\t\tthis.resolveRestFin();\r\n\t\t\r\n\t  return res;\r\n\t  // let body = res.json();\r\n\t  // return body._body || { };\r\n\t}\r\n\tprivate handleError (error: Response | any) {\r\n\t\tthis.resolveRestFin();\r\n\t\treturn Observable.throw(error.json() || 'Server error');\r\n\t\t// return error;\r\n\t  // let errMsg: string;\r\n\t  // if (error instanceof Response) {\r\n\t  //   const body = error.json() || '';\r\n\t  //   const err = body.error || JSON.stringify(body);\r\n\t  // } else {\r\n\t  //   errMsg = error.message ? error.message : error.toString();\r\n\t  // }\r\n\t  // return Observable.throw(errMsg);\r\n\t}\r\n\r\n\tprivate getDftHdr(hdrsArr:any){\r\n\t\tif(hdrsArr && hdrsArr.length>0){\r\n\t\t\treturn this._lftSrv.hdrs(hdrsArr)\r\n\t\t}else{\r\n\t\t\treturn this._lftSrv.hdrs('authorization','')\r\n\t\t}\r\n\t}\r\n\r\n\tprivate event(eventName:string,params:Object){\r\n\t\tlet newEvent = new CustomEvent(eventName,{detail:params});\r\n\t\tdocument.dispatchEvent(newEvent);\r\n\t}\r\n\tprivate resolveRestInit(params:RestParams){\r\n\t\tthis.params = params;\r\n\t\tif(params.events){\r\n\t\t\tthis.event('angularx-restful-started',{msg:params.events.restInitMsg});\r\n\t\t\tthis.resolveEventHandlers(this.params)\r\n\t\t\t\t\t.restInit({msg:params.events.restInitMsg});\r\n\t\t}\r\n\t}\r\n\tprivate resolveRestFin(){\r\n\t\tif(this.params.events){\r\n\t\t\tthis.resolveEventHandlers(this.params)\r\n\t\t\t\t\t.restFin({msg:this.params.events.restFinMsg});\r\n\t\t\tthis.event('angularx-restful-finished',{msg:this.params.events.restFinMsg});\r\n\t\t}\r\n\t}\r\n\r\n\tprivate resolveEventHandlers(params:RestParams){\r\n\t\tlet eventhndlr = this.getEventHandlers();\r\n\t\tif(!eventhndlr.restInit){\r\n\t\t\tif(params.events.restInit){\r\n\t\t\t\teventhndlr.restInit = params.events.restInit;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(!eventhndlr.restFin){\r\n\t\t\tif(params.events.restFin){\r\n\t\t\t\teventhndlr.restFin = params.events.restFin;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn eventhndlr;\r\n\t}\r\n\r\n\r\n\r\n\t// set default events handlers\r\n\teventHandlers:RestEvents;\r\n\tsetEventHandlers(eventHandlers:RestEvents){\r\n\t\tthis.eventHandlers = eventHandlers;\r\n\t}\r\n\tgetEventHandlers(){\r\n\t\tif(!this.eventHandlers ){\r\n\t\t\tthis.eventHandlers = new RestEvents();\r\n\t\t\tthis.eventHandlers.restFin = ()=>{\r\n\r\n\t\t\t}\r\n\t\t\tthis.eventHandlers.restInit = ()=>{\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this.eventHandlers;\r\n\t}\r\n\t\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Http, },\n{type: LftSrv, },\n];\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}